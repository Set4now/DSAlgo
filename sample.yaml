Mappings:
    ThresholdRegionMap:
        us-east-1:
          thresholdStartExecutionAsyncP50: "110"
          thresholdReportSuccessAsyncP50: "70"
          thresholdReportSuccessAsyncP99: "300"
        us-west-2:
          thresholdStartExecutionAsyncP50: "50"
          thresholdReportSuccessAsyncP50: "70"
          thresholdReportSuccessAsyncP99: "300"
        eu-west-1:
          thresholdStartExecutionAsyncP50: "75"
          thresholdReportSuccessAsyncP50: "125"
          thresholdReportSuccessAsyncP99: "500"
        ap-south-1:
          thresholdStartExecutionAsyncP50: "75"
          thresholdReportSuccessAsyncP50: "125"
          thresholdReportSuccessAsyncP99: "500"
        cn-north-1:
          thresholdStartExecutionAsyncP50: "50"
          thresholdReportSuccessAsyncP50: "70"
          thresholdReportSuccessAsyncP99: "300"
Parameters:
    ErrorAlarmThreshold: {Default: '2', Type: Number}
    FatalAlarmThreshold: {Default: '2', Type: Number}
    WorkItemAPIAvailabilityAlarmThreshold: {Default: '0.999', Type: Number}
    StatsAPIAvailabilityAlarmThreshold: {Default: '0.99', Type: Number}
    ContainerJVMHeapUtilizationAlarmThreshold: {Type: Number, Default: '50'}
    ContainerJVMHeapUtilizationAlarmEvaluationPeriods: {Type: Number, Default: '2'}
    ContainerJVMHeapUtilizationAlarmPeriod: {Type: Number, Default: '300'}
    ContainerCPUUtilizationHighAlarmThreshold: {Type: Number, Default: '45'}

    OneBoxDeploymentAlarmEvaluationPeriod: {Type: Number, Default: '90'}
    OneBoxDeploymentAlarmPeriod: {Type: Number, Default: '180'}
    OneBoxDeploymentAlarmThreshold: {Type: Number, Default: '3'}

  Resources:
    FatalAlarmSEV2:
      Properties:
        AlarmDescription: "Alarm if FATALs too high Runbook:https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
        ActionsEnabled: !Ref HexEnableAlarmTicketAction
        AlarmActions:
          - !Sub
            - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
            - HexTicketSeverity: !If
              - IsProd
              - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
              - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 3
        MetricName: FatalCount
        Namespace: {Ref: ServiceContainerName}
        Period: '60'
        Statistic: Sum
        Threshold: {Ref: FatalAlarmThreshold}
      Type: AWS::CloudWatch::Alarm
      Condition: NonOneBoxStage

    ErrorAlarmSEV2:
      Properties:
        AlarmDescription: "Alarm if ERRORs too high Runbook:https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
        ActionsEnabled: !Ref HexEnableAlarmTicketAction
        AlarmActions:
          - !Sub
            - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
            - HexTicketSeverity: !If
              - IsProd
              - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
              - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 3
        MetricName: ErrorCount
        Namespace: {Ref: ServiceContainerName}
        Period: '60'
        Statistic: Sum
        Threshold: {Ref: ErrorAlarmThreshold}
        TreatMissingData: "notBreaching"
      Type: AWS::CloudWatch::Alarm
      Condition: NonOneBoxStage

    ContainerJVMHeapUtilizationAlarm:
      Type: AWS::CloudWatch::Alarm
      Condition: NonOneBoxStage
      Properties:
        AlarmDescription: "Alarm if container jvm heap utilization is too high Runbook: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
        ActionsEnabled: !Ref HexEnableAlarmTicketAction
        AlarmActions:
          - !Sub
            - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
            - HexTicketSeverity: !If
              - IsProd
              - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
              - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: {Ref: ContainerJVMHeapUtilizationAlarmEvaluationPeriods}
        MetricName: HeapMemoryAfterGCUse
        Namespace: {Ref: ServiceName}
        Dimensions:
          - Name: Operation
            Value: JMX
          - Name: Program
            Value: {Ref: ServiceName}
          - Name: Region
            Value: {Ref: AWS::Region}
          - Name: Stage
            Value: {Ref: Domain}
          - Name: metric_type
            Value: counter
        Period: {Ref: ContainerJVMHeapUtilizationAlarmPeriod}
        Statistic: Average
        Threshold: {Ref: ContainerJVMHeapUtilizationAlarmThreshold}

    OneBoxUnhealthyDeploymentSEV2:
      Type: AWS::CloudWatch::Alarm
      Condition: OneBoxStage
      Properties:
        AlarmDescription: "Alarm if One box unhealthy deployment i.e running task count greater than 1 Runbook: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
        ActionsEnabled: !Ref HexEnableAlarmTicketAction
        AlarmActions:
          - !Sub
            - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
            - HexTicketSeverity: !If
              - IsProd
              - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
              - Fn::FindInMap: [HexTicketSeverity, SEV-3, value] 
        ComparisonOperator: GreaterThanThreshold
        MetricName: CPUUtilization
        Namespace: AWS/ECS
        Dimensions:
          - Name: ClusterName
            Value:
              Fn::ImportValue: ClusterName
          - Name: ServiceName
            Value:
              Fn::GetAtt: Service.Name
        Period: {Ref: OneBoxDeploymentAlarmPeriod}
        EvaluationPeriods: {Ref: OneBoxDeploymentAlarmEvaluationPeriod}
        Statistic: SampleCount
        Threshold: {Ref: OneBoxDeploymentAlarmThreshold}

    WorkItemAPIAvailabilitySEV2:
          Type: AWS::CloudWatch::Alarm
          Condition: NonOneBoxStage
          Properties:
            AlarmDescription: "Alarm if StartExecutionAsync Availability below threshold Runbook: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
            ActionsEnabled: !Ref HexEnableAlarmTicketAction
            AlarmActions:
              - !Sub
                - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
                - HexTicketSeverity: !If
                  - IsProd
                  - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
                  - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
            ComparisonOperator: LessThanThreshold
            MetricName: WorkItemAPIAvailability
            Namespace: {Ref: ServiceName}
            Dimensions:
              - Name: Program
                Value: {Ref: ServiceName}
              - Name: Region
                Value: {Ref: AWS::Region}
              - Name: Stage
                Value: {Ref: Domain}
              - Name: Operation
                Value: METRIC_ALL
              - Name: metric_type
                Value: histogram
              - Name: IsLegacy
                Value: 'True'
            Period: '60'
            EvaluationPeriods: 5
            Statistic: Average
            Threshold: {Ref: WorkItemAPIAvailabilityAlarmThreshold}
            TreatMissingData: "breaching"

    WorkItemStatsAPIAvailabilitySEV2:
          Type: AWS::CloudWatch::Alarm
          Condition: NonOneBoxStage
          Properties:
            AlarmDescription: "Alarm if StartExecutionAsync Availability below threshold Runbook: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
            ActionsEnabled: !Ref HexEnableAlarmTicketAction
            AlarmActions:
              - !Sub
                - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
                - HexTicketSeverity: !If
                  - IsProd
                  - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
                  - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
            ComparisonOperator: LessThanThreshold
            MetricName: WorkItemStatsAPIAvailability
            Namespace: {Ref: ServiceName}
            Dimensions:
              - Name: Program
                Value: {Ref: ServiceName}
              - Name: Region
                Value: {Ref: AWS::Region}
              - Name: Stage
                Value: {Ref: Domain}
              - Name: Operation
                Value: METRIC_ALL
              - Name: metric_type
                Value: histogram
              - Name: IsLegacy
                Value: 'True'
            Period: '60'
            EvaluationPeriods: 15
            Statistic: Average
            Threshold: {Ref: StatsAPIAvailabilityAlarmThreshold}
            TreatMissingData: "breaching"

    ReportSuccessAsyncLatencyP99SEV2:
          Type: AWS::CloudWatch::Alarm
          Condition: NonOneBoxStage
          Properties:
            AlarmDescription: "Alarm if ReportSuccessAsync P99 Latency below threshold Runbook: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
            ActionsEnabled: !Ref HexEnableAlarmTicketAction
            AlarmActions:
              - !Sub
                - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
                - HexTicketSeverity: !If
                  - IsProd
                  - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
                  - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
            MetricName: OverallCallLatency
            Namespace: {Ref: ServiceName}
            ExtendedStatistic: p99
            Dimensions:
              - Name: Program
                Value: {Ref: ServiceName}
              - Name: Region
                Value: {Ref: AWS::Region}
              - Name: Stage
                Value: {Ref: Domain}
              - Name: Operation
                Value: ReportSuccessAsync
              - Name: metric_type
                Value: timing
              - Name: IsLegacy
                Value: 'True'
            Period: '60'
            EvaluationPeriods: 15
            DatapointsToAlarm: 15
            ComparisonOperator: GreaterThanThreshold
            Threshold: !FindInMap [ThresholdRegionMap, !Ref "AWS::Region", thresholdReportSuccessAsyncP99]
            TreatMissingData: "breaching"

    ReportSuccessAsyncLatencyP50SEV2:
          Type: AWS::CloudWatch::Alarm
          Condition: NonOneBoxStage
          Properties:
            AlarmDescription: "Alarm if ReportSuccessAsync Latency P50 exceeds the limit: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
            ActionsEnabled: !Ref HexEnableAlarmTicketAction
            AlarmActions:
              - !Sub
                - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
                - HexTicketSeverity: !If
                  - IsProd
                  - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
                  - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
            MetricName: OverallCallLatency
            Namespace: {Ref: ServiceName}
            ExtendedStatistic: p50
            Dimensions:
              - Name: Program
                Value: {Ref: ServiceName}
              - Name: Region
                Value: {Ref: AWS::Region}
              - Name: Stage
                Value: {Ref: Domain}
              - Name: Operation
                Value: ReportSuccessAsync
              - Name: metric_type
                Value: timing
              - Name: IsLegacy
                Value: 'True'
            Period: '60'
            EvaluationPeriods: 15
            DatapointsToAlarm: 15
            ComparisonOperator: GreaterThanThreshold
            Threshold: !FindInMap [ThresholdRegionMap, !Ref "AWS::Region", thresholdReportSuccessAsyncP50]
            TreatMissingData: "breaching"

    StartExecutionAsyncLatencyP50SEV2:
          Type: AWS::CloudWatch::Alarm
          Condition: NonOneBoxStage
          Properties:
            AlarmDescription: "Alarm if StartExecutionAsync Latency P50 exceeds the limit:: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
            ActionsEnabled: !Ref HexEnableAlarmTicketAction
            AlarmActions:
              - !Sub
                - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
                - HexTicketSeverity: !If
                  - IsProd
                  - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
                  - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
            MetricName: OverallCallLatency
            Namespace: {Ref: ServiceName}
            ExtendedStatistic: p50
            Dimensions:
              - Name: Program
                Value: {Ref: ServiceName}
              - Name: Region
                Value: {Ref: AWS::Region}
              - Name: Stage
                Value: {Ref: Domain}
              - Name: Operation
                Value: StartExecutionAsync
              - Name: metric_type
                Value: timing
              - Name: IsLegacy
                Value: 'True'
            Period: '60'
            EvaluationPeriods: 15
            DatapointsToAlarm: 15
            ComparisonOperator: GreaterThanThreshold
            Threshold: !FindInMap [ThresholdRegionMap, !Ref "AWS::Region", thresholdStartExecutionAsyncP50]
            TreatMissingData: "breaching"

    StartExecutionAsyncLatencyP99SEV2:
          Type: AWS::CloudWatch::Alarm
          Condition: NonOneBoxStage
          Properties:
            AlarmDescription: "Alarm if StartExecutionAsync P99 Latency below threshold Runbook: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
            ActionsEnabled: !Ref HexEnableAlarmTicketAction
            AlarmActions:
              - !Sub
                - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
                - HexTicketSeverity: !If
                  - IsProd
                  - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
                  - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
            MetricName: OverallCallLatency
            Namespace: {Ref: ServiceName}
            ExtendedStatistic: p99
            Dimensions:
              - Name: Program
                Value: {Ref: ServiceName}
              - Name: Region
                Value: {Ref: AWS::Region}
              - Name: Stage
                Value: {Ref: Domain}
              - Name: Operation
                Value: StartExecutionAsync
              - Name: metric_type
                Value: timing
              - Name: IsLegacy
                Value: 'True'
            Period: '60'
            EvaluationPeriods: 15
            DatapointsToAlarm: 15
            ComparisonOperator: GreaterThanThreshold
            Threshold: 300
            TreatMissingData: "breaching"

    ScaleUpPolicy:
      Type: AWS::ApplicationAutoScaling::ScalingPolicy
      Properties:
        PolicyName: StepUpPolicy
        PolicyType: StepScaling
        ScalingTargetId:
          Ref: ScalableTarget
        StepScalingPolicyConfiguration:
          AdjustmentType: ChangeInCapacity
          Cooldown: 60
          MetricAggregationType: Average
          StepAdjustments:
            - MetricIntervalLowerBound: 0
              ScalingAdjustment: 2

    ReportSuccessAsyncLatencyAverageSEV2:
          Type: AWS::CloudWatch::Alarm
          Condition: isPDX
          Properties:
            AlarmDescription: "Alarm if ReportSuccessAsync Average Latency below threshold Runbook: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
            ActionsEnabled: !Ref HexEnableAlarmTicketAction
            AlarmActions:
              - !Sub
                - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
                - HexTicketSeverity: !If
                  - IsProd
                  - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
                  - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
            MetricName: OverallCallLatency
            Namespace: {Ref: ServiceName}
            Dimensions:
              - Name: Program
                Value: {Ref: ServiceName}
              - Name: Region
                Value: {Ref: AWS::Region}
              - Name: Stage
                Value: {Ref: Domain}
              - Name: Operation
                Value: ReportSuccessAsync
              - Name: metric_type
                Value: timing
              - Name: IsLegacy
                Value: 'True'
            Period: '60'
            Statistic: Average
            EvaluationPeriods: 15
            DatapointsToAlarm: 15
            ComparisonOperator: GreaterThanThreshold
            Threshold: 50
            TreatMissingData: "breaching"

    ContainerCPUUtilLowAlarmSEV0:
        Type: AWS::CloudWatch::Alarm
        Properties:
            AlarmDescription: "ScaleDown if container CPU utilization is too low - random string xyz"
            ActionsEnabled: true
            AlarmActions:
              - arn:aws:autoscaling:us-west-2:248130483321:scalingPolicy:c14971fd-865a-42dd-9782-9d672ca2d33b:resource/ecs/service/Cluster/OrcaGatewayService:policyName/StepDownPolicy
            MetricName: CPUUtilization
            Namespace: AWS/ECS
            Dimensions:
            - Name: ClusterName
              Value: Cluster
            - Name: ServiceName
              Value: {Ref: ServiceName}
            Period: '60'
            Unit: Percent
            Statistic: Average
            EvaluationPeriods: 5
            DatapointsToAlarm: 5
            ComparisonOperator: LessThanThreshold
            Threshold: 25

    ContainerCPUUtilHighAlarmSEV0:
        Type: AWS::CloudWatch::Alarm
        Properties:
          AlarmDescription: "ScaleUp if container CPU utilization is too high - random string xyz"
          ActionsEnabled: true
          AlarmActions:
            - arn:aws:autoscaling:us-west-2:248130483321:scalingPolicy:c14971fd-865a-42dd-9782-9d672ca2d33b:resource/ecs/service/Cluster/OrcaGatewayService:policyName/StepUpPolicy
          MetricName: CPUUtilization
          Namespace: AWS/ECS
          Dimensions:
          - Name: ClusterName
            Value: Cluster
          - Name: ServiceName
            Value: {Ref: ServiceName}
          Period: '60'
          Unit: Percent
          Statistic: Average
          EvaluationPeriods: 5
          DatapointsToAlarm: 5
          Threshold: 45
          ComparisonOperator: GreaterThanThreshold

    ECSTaskStoppedAlarmSEV2:
        Type: AWS::CloudWatch::Alarm
        Properties:
            AlarmDescription: "ECS Service task stopped. Runbook: https://w.amazon.com/bin/view/HEX/HEX-AWS/MonitoringYourService#HDefaultalarms"
            ActionsEnabled: !Ref HexEnableAlarmTicketAction
            AlarmActions:
              - !Sub
                - "arn:${AWS::Partition}:cloudwatch::cwa-internal:ticket:${HexTicketSeverity}:${HexServiceOwnerCTI}:${ServiceOwnerResolverGroup}:"
                - HexTicketSeverity: !If
                  - IsProd
                  - Fn::FindInMap: [HexTicketSeverity, SEV-2, value]
                  - Fn::FindInMap: [HexTicketSeverity, SEV-3, value]
            EvaluationPeriods: 3
            DatapointsToAlarm: 1
            Threshold: 1
            ComparisonOperator: GreaterThanOrEqualToThreshold
            TreatMissingData: "notBreaching"
            Metrics:
                - Id: taskStopCount
                  ReturnData: true
                  Expression: IF (ecsDeployment == 0 AND taskStopped, 1, 0)
                - Id: taskStopped
                  ReturnData: false
                  Expression: IF(taskStartFailureCount>0 OR taskHealthCheckFailureCount>0 OR
                      taskStoppedForUnknownReason>0 OR
                      taskStoppedEssentialContainerExited>0, 1, 0)
                - Id: ecsDeployment
                  ReturnData: false
                  MetricStat:
                      Metric:
                          Namespace: HEXCustomMetrics
                          MetricName: ecs_deployment
                          Dimensions:
                              - Name: ClusterName
                                Value: Cluster
                      Period: 60
                      Stat: Maximum
                      Unit: Count
                - Id: taskStartFailureCount
                  ReturnData: false
                  MetricStat:
                      Metric:
                          Namespace: HEXCustomMetrics
                          MetricName: TaskStop
                          Dimensions:
                              - Name: StopReason
                                Value: FAILED_TO_START
                              - Name: ClusterName
                                Value: Cluster
                              - Name: ServiceName
                                Value: OrcaGatewayService
                      Period: 60
                      Stat: Maximum
                - Id: taskHealthCheckFailureCount
                  ReturnData: false
                  MetricStat:
                      Metric:
                          Namespace: HEXCustomMetrics
                          MetricName: TaskStop
                          Dimensions:
                              - Name: StopReason
                                Value: FAILED_HEALTH_CHECKS
                              - Name: ClusterName
                                Value: Cluster
                              - Name: ServiceName
                                Value: OrcaGatewayService
                      Period: 60
                      Stat: Maximum
                - Id: taskStoppedForUnknownReason
                  ReturnData: false
                  MetricStat:
                      Metric:
                          Namespace: HEXCustomMetrics
                          MetricName: TaskStop
                          Dimensions:
                              - Name: StopReason
                                Value: UNKNOWN
                              - Name: ClusterName
                                Value: Cluster
                              - Name: ServiceName
                                Value: OrcaGatewayService
                      Period: 60
                      Stat: Maximum
                - Id: taskStoppedEssentialContainerExited
                  ReturnData: false
                  MetricStat:
                      Metric:
                          Namespace: HEXCustomMetrics
                          MetricName: TaskStop
                          Dimensions:
                              - Name: StopReason
                                Value: ESSENTIAL_CONTAINER_EXITED
                              - Name: ClusterName
                                Value: Cluster
                              - Name: ServiceName
                                Value: OrcaGatewayService
                      Period: 60
                      Stat: Maximum